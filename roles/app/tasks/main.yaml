- name: disable default nodejs
  ansible.builtin.command:  dnf module disable nodejs -y

- name: enable nodejs:20 version
  ansible.builtin.command:  dnf module enable nodejs:20 -y

- name: install nodejs
  ansible.builtin.dnf:
    name: "{{item}}"
    state:  present
  loop:
    - nodejs
    - mysql

- name: add user expense
  ansible.builtin.user:
    name: expense

- name: import common code 
  tags: deployment
  ansible.builtin.import_role:
    name: commonforrallroles
    tasks_from: appcode

- name: run npm command
  tags: deployment
  ansible.builtin.command:  "npm install"
  args:
    chdir:  /app

- name: template module to copy backend service file   
  ansible.builtin.template:
    src:  backend.service.j2
    dest: /etc/systemd/system/backend.service
  notify:
    - reload daemon

- name: pip module to install pymysql
  ansible.builtin.pip:
    name:
    - pymysql
    - cryptography
    state:  present
    executable: pip3.9

- name: load schema into mysql
  community.mysql.mysql_db:
    login_host: "{{mysqldb_host}}"
    login_user: "{{mysql_dbuser}}"
    login_password: "{{mysqldb_password}}"
    state: import
    target: /app/schema/backend.sql
    name: all

#- name: reload daemon
#  ansible.builtin.systemd_service:
#     daemon_reload: true

#- name: start and enable the backend
# ansible.builtin.systemd_service:
#   name: backend
#   state: started
#   enabled: true

- name: start and enable the backend
  tags: deployment
  ansible.builtin.systemd_service:
    name: backend
    state: restarted
    enabled: true
